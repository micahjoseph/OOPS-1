COPY ASSIGNMENT CLASS


class Student
{
	public:
	
	int roll_number;
	private:
	int age;
	
	
	public:
		~Student(){
			cout<<"Destructor called !"<<endl;
		}
	public:
	//DEFAULT CONSTRUCTOR
	Student()
	{
	  cout<<"Default Constructor called"<<endl;
		
	}
	

	Student(int r,int a)
	{
		//cout<<"Constructor 3 called"<<endl;
		cout<<" Copy Constructor  called"<<endl;
		roll_number=r;
		age=a;
		
		
	}
	//this->holds the address of current element
	Student(int roll_number)
	{
		cout<<"Constructor 4 called"<<endl;
		this->roll_number=roll_number;
		
		
		
	}
	
	void display()
	{
		cout<<roll_number<<" "<<age;
	}
	
	
	int getAge()
	{
		return age;
	}
	void setAge(int a,int password)
	{
		if(password!=123)
		{
			return;
		}
		
		if(a<0)
		{
			return;
		}
		
		age=a;
	}
};

COPY ASSIGNMENT OBJECT
class Student
{
	public:
	
	int roll_number;
	private:
	int age;
	
	
	public:
		~Student(){
			cout<<"Destructor called !"<<endl;
		}
	public:
	//DEFAULT CONSTRUCTOR
	Student()
	{
	  cout<<"Default Constructor called"<<endl;
		
	}
	

	Student(int r,int a)
	{
		//cout<<"Constructor 3 called"<<endl;
		cout<<" Copy Constructor  called"<<endl;
		roll_number=r;
		age=a;
		
		
	}
	//this->holds the address of current element
	Student(int roll_number)
	{
		cout<<"Constructor 4 called"<<endl;
		this->roll_number=roll_number;
		
		
		
	}
	
	void display()
	{
		cout<<roll_number<<" "<<age;
	}
	
	
	int getAge()
	{
		return age;
	}
	void setAge(int a,int password)
	{
		if(password!=123)
		{
			return;
		}
		
		if(a<0)
		{
			return;
		}
		
		age=a;
	}
};





