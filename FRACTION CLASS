FRACTION CLASS

class Fraction{
	private:
		int numerator;
		int denominator;
		
	public:
		Fraction(int numerator,int denominator)
		{
			this->numerator=numerator;
			this->denominator=denominator;
		}
		void print(){
			cout<<numerator<<"/"<<denominator;
		}
		
		void simplify()
		{
			int gcd=1;
			int j=min(this->numerator,this->denominator);
			for(int i=1;i<=j;i++)
			{
				if((this->numerator)%i==0&&(this->denominator)%i==0)
				{
					gcd=i;
				}
			}
			this->numerator=this->numerator/gcd;
			this->denominator=this->denominator/gcd;
		}
		/*void add(Fraction f2)//new block created
		{
			int lcm=this->denominator*f2.denominator;
			int x=lcm/this->denominator;
			int y=lcm/f2.denominator;
			
			int num=(x*this->numerator)+(y*f2.numerator);
			this->numerator=num;
			this->denominator=lcm;
			
			simplify();
		}*/
		void add(Fraction const &f2)
		{
			int lcm=this->denominator*f2.denominator;
			int x=lcm/this->denominator;
			int y=lcm/f2.denominator;
			
			int num=(x*this->numerator)+(y*f2.numerator);
			this->numerator=num;
			this->denominator=lcm;
			
			simplify();
		}
		
};




FRACTION OBJECT

#include<iostream>
using namespace std;
#include "fraction_class.cpp"
int main()
{
	Fraction f1(10,2);
	Fraction f2(15,4);
	f1.add(f2);
	f1.print();
	f2.print();
}



